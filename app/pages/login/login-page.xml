<Page xmlns="http://schemas.nativescript.org/tns.xsd" xmlns:df="nativescript-ui-dataform" actionBarHidden="true" navigatingTo="navigatingTo" class="page">
    <!--
    The StackLayout stacks UI components on the screenâ€”either vertically or horizontally.
    In this case, the StackLayout does vertical stacking; you can change the stacking to
    horizontal by applying a orientation="horizontal" attribute to the <StackLayout> element.
    You can learn more about NativeScript layouts at
    https://docs.nativescript.org/ui/layout-containers.

    These components make use of several CSS class names that are part of the NativeScript
    core theme, such as p-20, btn, h2, and text-center. You can view a full list of the
    class names available for styling your app at https://docs.nativescript.org/ui/theme.
    --> 
    <StackLayout>
        <Image src="res://icon" height="200"/>
        <df:RadDataForm id="loginForm" source="{{ loginForm }}" >
            <df:RadDataForm.properties>
                <df:EntityProperty name="username" displayName="Username" index="0" >
                     <df:EntityProperty.validators>
                        <df:NonEmptyValidator />
                    </df:EntityProperty.validators>
                </df:EntityProperty>
                <df:EntityProperty name="password" displayName="Password" index="1">
                    <df:EntityProperty.editor>
                        <df:PropertyEditor type="Password" />
                    </df:EntityProperty.editor>
                     <df:EntityProperty.validators>
                        <df:NonEmptyValidator />
                    </df:EntityProperty.validators>
                </df:EntityProperty>
                <df:EntityProperty name="rememberMe" displayName="Remember Me" index="2">
                      <df:EntityProperty.editor>
                        <df:PropertyEditor type="Switch" />
                    </df:EntityProperty.editor>
                </df:EntityProperty>
            </df:RadDataForm.properties>
        </df:RadDataForm>
         <Label visibility="{{ loginError ? 'visible' : 'collapse' }}" text="{{ loginError }}" class="error-text" />
        <Button text="Login" tap="{{ onLoginButtonTap }}" />
    </StackLayout>
</Page>